sam build
sam package --output-template packaged.yaml --s3-bucket used-car-storage
sam deploy --template-file packaged.yaml --region eu-west-1 --capabilities CAPABILITY_IAM --stack-name aws-sam-getting-started

aws cloudformation describe-stacks --stack-name aws-sam-getting-started --region eu-west-1 --query "Stacks[].Outputs"


aws cloudformation delete-stack --stack-name aws-sam-getting-started



example stack: https://github.com/mmuppidi/apigateway-stepfunctions-sam/blob/master/stack.yaml

aws documentation:
https://aws.amazon.com/about-aws/whats-new/2017/02/amazon-api-gateway-integration-with-aws-step-functions/
https://docs.aws.amazon.com/step-functions/latest/dg/tutorial-lambda-state-machine-cloudformation.html
https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-getting-started-hello-world.html

dynamoDB Storing data:
https://stackoverflow.com/questions/33535613/how-to-put-an-item-in-aws-dynamodb-using-aws-lambda-with-python

 "PutDynamoDB": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "xxxxxxxxxx",
        "Item": {
          "date": {"S.$": "$.date"},
          "value": {"S.$": "$.totalcost"}
        }
      },